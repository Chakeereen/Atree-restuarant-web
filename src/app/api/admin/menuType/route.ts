import { NextResponse } from "next/server";
import { prisma } from "../../../../lib/prisma"; // ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡∏°‡∏µ prisma.ts ‡πÉ‡∏ô lib/

// üü° GET: ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• MenuType ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏°‡∏ô‡∏π
export async function GET() {
  try {
    const types = await prisma.menuType.findMany({
     orderBy: {
        typeID: 'asc'
     }
    });

    return NextResponse.json(types);
  } catch (error) {
    console.error("GET /menutype error:", error);
    return NextResponse.json({ error: "Internal Server Error" }, { status: 500 });
  }
}

// üü° POST: ‡πÄ‡∏û‡∏¥‡πà‡∏° MenuType ‡πÉ‡∏´‡∏°‡πà
export async function POST(req: Request) {
  try {
    const body = await req.json();
    const { name } = body;

    if (!name) {
      return NextResponse.json({ error: "Name is required" }, { status: 400 });
    }

    const newType = await prisma.menuType.create({
      data: { name },
    });

    return NextResponse.json(newType);
  } catch (error) {
    console.error("POST /menutype error:", error);
    return NextResponse.json({ error: "Internal Server Error" }, { status: 500 });
  }
}
